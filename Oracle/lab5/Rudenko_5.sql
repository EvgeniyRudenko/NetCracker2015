/*1. Создать логическую БД названием Вашеимя_eav*/

/*
connect system/oracle11xe

create user Evgeniy_eav identified by 123;

grant connect, resource to Evgeniy_eav;

disconnect

connect Evgeniy_eav/123

*/

/*2. В БД создать таблицы БД типа EAV/CR.*/

drop table OBJTYPE CASCADE CONSTRAINTS;
drop table ATTRTYPE CASCADE CONSTRAINTS;
drop table OBJECTS CASCADE CONSTRAINTS;
drop table ATTRIBUTES CASCADE CONSTRAINTS;
drop table OBJREFERENCE CASCADE CONSTRAINTS;

-- Таблица описаний объектных типов
CREATE TABLE OBJTYPE
  (
    OBJECT_TYPE_ID NUMBER(20) NOT NULL ENABLE,
    PARENT_ID      NUMBER(20),
    CODE           VARCHAR2(20) NOT NULL UNIQUE,
    NAME           VARCHAR2(200 BYTE),
    DESCRIPTION    VARCHAR2(1000 BYTE),
    CONSTRAINT CON_OBJECT_TYPE_ID PRIMARY KEY (OBJECT_TYPE_ID),
    CONSTRAINT CON_PARENT_ID FOREIGN KEY (PARENT_ID) REFERENCES OBJTYPE (OBJECT_TYPE_ID) ON DELETE CASCADE ENABLE
  );
  
  CREATE TABLE ATTRTYPE (
    ATTR_ID      		NUMBER(20) NOT NULL,
    OBJECT_TYPE_ID 		NUMBER(20) NOT NULL,
	OBJECT_TYPE_ID_REF 	NUMBER(20),
    CODE         		VARCHAR2(20),
    NAME         		VARCHAR2(200 BYTE),
    CONSTRAINT CON_ATTR_ID PRIMARY KEY (ATTR_ID),
    CONSTRAINT CON_ATTR_OBJECT_TYPE_ID FOREIGN KEY (OBJECT_TYPE_ID) REFERENCES OBJTYPE (OBJECT_TYPE_ID),
	CONSTRAINT CON_ATTR_OBJECT_TYPE_ID_REF FOREIGN KEY (OBJECT_TYPE_ID_REF) REFERENCES OBJTYPE (OBJECT_TYPE_ID)
);

-- Таблица описаний экземпляров объектов
CREATE TABLE OBJECTS (
    OBJECT_ID      NUMBER(20) NOT NULL,
    PARENT_ID      NUMBER(20),
    OBJECT_TYPE_ID NUMBER(20) NOT NULL,
    NAME           VARCHAR2(2000 BYTE),
    DESCRIPTION    VARCHAR2(4000 BYTE),
    CONSTRAINT CON_OBJECTS_ID PRIMARY KEY (OBJECT_ID),
    CONSTRAINT CON_PARENTS_ID FOREIGN KEY (PARENT_ID) REFERENCES OBJECTS (OBJECT_ID) ON DELETE CASCADE DEFERRABLE,
    CONSTRAINT CON_OBJ_TYPE_ID FOREIGN KEY (OBJECT_TYPE_ID) REFERENCES OBJTYPE (OBJECT_TYPE_ID)
);

-- Таблица описаний значений атрибутов экземпляров объектов
CREATE TABLE ATTRIBUTES
  (
    ATTR_ID    NUMBER(20) NOT NULL,
    OBJECT_ID  NUMBER(20) NOT NULL,
    VALUE      VARCHAR2(4000 BYTE),
    DATE_VALUE DATE,
	CONSTRAINT CON_ATTRIBUTES_PK PRIMARY KEY (ATTR_ID,OBJECT_ID),
    CONSTRAINT CON_AOBJECT_ID FOREIGN KEY (OBJECT_ID) REFERENCES OBJECTS (OBJECT_ID) ON DELETE CASCADE,
    CONSTRAINT CON_AATTR_ID FOREIGN KEY (ATTR_ID) REFERENCES ATTRTYPE (ATTR_ID) ON DELETE CASCADE
  );  
  
  CREATE TABLE OBJREFERENCE
  (
    ATTR_ID   NUMBER(20) NOT NULL,
    REFERENCE NUMBER(20) NOT NULL,
    OBJECT_ID NUMBER(20) NOT NULL,
	CONSTRAINT CON_OBJREFERENCE_PK PRIMARY KEY (ATTR_ID,REFERENCE,OBJECT_ID),
    CONSTRAINT CON_REFERENCE FOREIGN KEY (REFERENCE) REFERENCES OBJECTS (OBJECT_ID) ON DELETE CASCADE,
    CONSTRAINT CON_ROBJECT_ID FOREIGN KEY (OBJECT_ID) REFERENCES OBJECTS (OBJECT_ID) ON DELETE CASCADE,
    CONSTRAINT CON_RATTR_ID FOREIGN KEY (ATTR_ID) REFERENCES ATTRTYPE (ATTR_ID) ON DELETE CASCADE
  ); 

/*3. Для классов из UML-диаграммы, описывающих города и подразделения, заполнить описания типов
объектов, типов атрибутов.*/
  
INSERT INTO OBJTYPE (OBJECT_TYPE_ID,PARENT_ID,CODE,NAME,DESCRIPTION) VALUES (1, NULL, 'LOC','Город',NULL);
INSERT INTO OBJTYPE (OBJECT_TYPE_ID,PARENT_ID,CODE,NAME,DESCRIPTION) VALUES (2, 1, 'DEPT','Подразделение',NULL);

INSERT INTO ATTRTYPE (ATTR_ID,OBJECT_TYPE_ID,OBJECT_TYPE_ID_REF,CODE,NAME) VALUES (1,1,NULL,'NAME','Название');
INSERT INTO ATTRTYPE (ATTR_ID,OBJECT_TYPE_ID,OBJECT_TYPE_ID_REF,CODE,NAME) VALUES (2,2,NULL,'NAME','Название');

/*4. Для каждого класса создать по два экземпляра объекта, заполнив соответствующие таблицы.*/

-- Создание экземпляров объекта "Город"
INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME,DESCRIPTION) VALUES (1,NULL,1,'Odessa',NULL);
INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME,DESCRIPTION) VALUES (2,NULL,1,'Sumy',NULL);
-- Создание экземпляров объекта "Подразделение" как наследника экземпляра объекта "Город"
INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME,DESCRIPTION) VALUES (3,1,2,'HR department',NULL);
INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME,DESCRIPTION) VALUES (4,2,2,'IT department',NULL);

INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (1, 1, 'Odessa', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (1, 2, 'Sumy', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (2, 3, 'HR department', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (2, 4, 'IT department', NULL);

/*5. Выполнить запрос к БД, который получает название городов и подразделений.*/

select LOC.name Location, DEPT.name Department from objects LOC join objects DEPT on (DEPT.parent_id = LOC.object_id)
where (LOC.object_type_id = 1 and DEPT.object_type_id = 2);


/*6. Для классов из UML-диаграммы, описывающих сотрудников, заполнить описания типов объектов,
типов атрибутов.*/
INSERT INTO OBJTYPE (OBJECT_TYPE_ID,PARENT_ID,CODE,NAME,DESCRIPTION) VALUES (3,NULL,'EMP','Сотрудник',NULL);
INSERT INTO OBJTYPE (OBJECT_TYPE_ID,PARENT_ID,CODE,NAME,DESCRIPTION) VALUES (4,3,'MGR','Менеджер',NULL);

INSERT INTO ATTRTYPE (ATTR_ID,OBJECT_TYPE_ID,OBJECT_TYPE_ID_REF,CODE,NAME) VALUES (3,3,NULL,'NAME','Фамилия');
INSERT INTO ATTRTYPE (ATTR_ID,OBJECT_TYPE_ID,OBJECT_TYPE_ID_REF,CODE,NAME) VALUES (4,3,NULL,'SAL','Зарплата');
INSERT INTO ATTRTYPE (ATTR_ID,OBJECT_TYPE_ID,OBJECT_TYPE_ID_REF,CODE,NAME) VALUES (5,3,NULL,'JOB','Должность');
INSERT INTO ATTRTYPE (ATTR_ID,OBJECT_TYPE_ID,OBJECT_TYPE_ID_REF,CODE,NAME) VALUES (6,3,NULL,'HIREDATE','Дата зачисления');
INSERT INTO ATTRTYPE (ATTR_ID,OBJECT_TYPE_ID,OBJECT_TYPE_ID_REF,CODE,NAME) VALUES (7,3,2,'WORK','Работа');
INSERT INTO ATTRTYPE (ATTR_ID,OBJECT_TYPE_ID,OBJECT_TYPE_ID_REF,CODE,NAME) VALUES (8,3,4,'MANAGE','Управление');

/*7. Для каждого класса создать по два экземпляра объекта, заполнив соответствующие таблицы.*/

INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME,DESCRIPTION) VALUES (5,NULL,3,'John Doe',NULL);
INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME,DESCRIPTION) VALUES (6,NULL,3,'Jane Doe',NULL);

INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME,DESCRIPTION) VALUES (7,NULL,4,'Boss of John',NULL);
INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME,DESCRIPTION) VALUES (8,NULL,4,'Boss of Jane',NULL);

/*John Doe*/
          /*Фамилия*/
          /*Зарплата*/
          /*Должность*/
          /*Дата зачисления*/
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (3, 5, 'John Doe', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (4, 5, 5000, NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (5, 5, 'Programmer', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (6, 5,  NULL, '10.10.2010');

/*Jane Doe*/
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (3, 6, 'Jane Doe', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (4, 6, 3500, NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (5, 6, 'HR', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (6, 6,  NULL, '12.12.2012');

/*Boss of John*/
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (3, 7, 'Boss of John', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (4, 7, 12000, NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (5, 7, 'ProgrammerBoss', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (6, 7,  NULL, '08.05.2009');

/*Boss of Jane*/
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (3, 8, 'Boss of Jane', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (4, 8, 10000, NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (5, 8, 'HRBoss', NULL);
INSERT INTO ATTRIBUTES (ATTR_ID, OBJECT_ID, VALUE, DATE_VALUE) VALUES (6, 8,  NULL, '11.07.2010');

/*
Экземпляр объекта "Сотрудник" - "John Doe" ( OBJECT_ID = 5 ) 
связан с экземпляром объекта "IT department" ( OBJECT_ID = 4 ) 
атрибутной связью "WORK" (ATTR_ID = 7) по кратности "многие к одному"
*/
INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE) VALUES (7,5,4);

INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE) VALUES (7,6,3);
INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE) VALUES (7,7,4);
INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE) VALUES (7,8,3);

INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE) VALUES (8,5,7);
INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE) VALUES (8,6,8);

/*8. Выполнить запрос к БД, который получает фамилию сотрудников и зарплату сотрудников.*/
select objects.name LastName, attributes.value Salary 
from objects join attributes on (objects.object_id = attributes.object_id)
where (objects.object_type_id in (3,4) and attributes.attr_id = 4);

/*
9. Выполнить запрос к БД, который: 
- получает названия подразделений; 
- получает фамилии сотрудников, работающих в указанных подразделениях; 
- подразделения расположены в одном из городов, название которого ранее было внесено. 
*/
--AND DEPT.NAME = 'IT department'
SELECT dept.name Department, EMP.NAME LastName, LOC.name City
FROM OBJECTS EMP,OBJECTS DEPT,OBJECTS LOC, OBJREFERENCE DEPT_REF
WHERE 
EMP.OBJECT_TYPE_ID in (3,4)
AND DEPT.OBJECT_TYPE_ID = 2 
AND DEPT.parent_ID = LOC.OBJECT_ID
AND LOC.name = 'Odessa'
AND DEPT_REF.ATTR_ID = 7 
AND DEPT_REF.OBJECT_ID = EMP.OBJECT_ID
AND DEPT_REF.REFERENCE = DEPT.OBJECT_ID;



/*
10.  Создать  множество  запросов  типа  INSERT  INTO  …  SELECT,  которые  автоматически  заполнят 
таблицы  объектов,  атрибутов  и  связей,  взяв  данные  из  реляционной  БД,  использующейся  в  4-й  работе  с 
именем old_db.
*/

/*
disconnect
connect old_db/123

grant select on regions to evgeniy_eav;
grant select on countries to evgeniy_eav;
grant select on locations to evgeniy_eav;
grant select on departments to evgeniy_eav;
grant select on employees to evgeniy_eav;
grant select on jobs to evgeniy_eav;

disconnect
connect Evgeniy_eav/123
*/


INSERT INTO OBJTYPE (OBJECT_TYPE_ID,PARENT_ID,CODE,NAME,DESCRIPTION) VALUES (5, NULL, 'REG','Регион',NULL);
INSERT INTO OBJTYPE (OBJECT_TYPE_ID,PARENT_ID,CODE,NAME,DESCRIPTION) VALUES (6, 5, 'COUNTRY','Страна',NULL);
INSERT INTO OBJTYPE (OBJECT_TYPE_ID,PARENT_ID,CODE,NAME,DESCRIPTION) VALUES (7, NULL, 'JOB','Должность',NULL);
Update OBJTYPE
set PARENT_ID=6
where OBJECT_TYPE_ID=1;

drop sequence objects_seq;
create sequence objects_seq start with 9;

INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME)
select objects_seq.nextval, objtype.parent_id, OBJTYPE.OBJECT_TYPE_ID, region_name 
from OLD_DB.REGIONS, OBJTYPE
where Code = 'REG';

INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME)
select objects_seq.nextval, objtype.parent_id, OBJTYPE.OBJECT_TYPE_ID, country_name
from OLD_DB.countries, OBJTYPE
where Code = 'COUNTRY';

INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME)
select objects_seq.nextval, objtype.parent_id, OBJTYPE.OBJECT_TYPE_ID, city
from OLD_DB.locations, OBJTYPE
where Code = 'LOC';

INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME)
select objects_seq.nextval, objtype.parent_id, OBJTYPE.OBJECT_TYPE_ID, department_name
from OLD_DB.departments, OBJTYPE
where Code = 'DEPT';

INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME)
select objects_seq.nextval, objtype.parent_id, OBJTYPE.OBJECT_TYPE_ID, first_name || last_name
from OLD_DB.EMPLOYEES, OBJTYPE
where Code = 'EMP';

INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME)
select objects_seq.nextval, objtype.parent_id, OBJTYPE.OBJECT_TYPE_ID, first_name || last_name
from OLD_DB.EMPLOYEES, OBJTYPE
where Code = 'MGR'
AND OLD_DB.EMPLOYEES.EMPLOYEE_ID in (select distinct manager_id from OLD_DB.EMPLOYEES);

INSERT INTO OBJECTS (OBJECT_ID,PARENT_ID,OBJECT_TYPE_ID,NAME)
select objects_seq.nextval, objtype.parent_id, OBJTYPE.OBJECT_TYPE_ID, job_title
from OLD_DB.jobs, OBJTYPE
where Code = 'JOB';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.locations.city
from OBJECTS, ATTRTYPE, OLD_DB.LOCATIONS
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.Locations.city
and ATTRTYPE.OBJECT_TYPE_ID = 1;

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.departments.department_name
from OBJECTS, ATTRTYPE, OLD_DB.DEPARTMENTS
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.departments.department_name
and ATTRTYPE.OBJECT_TYPE_ID = 2;

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.Employees.first_name || ' ' || OLD_DB.Employees.last_name
from OBJECTS, ATTRTYPE, OLD_DB.EMPLOYEES
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.Employees.first_name || OLD_DB.Employees.last_name
and ATTRTYPE.OBJECT_TYPE_ID = 3
and ATTRTYPE.CODE = 'NAME';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.Employees.salary
from OBJECTS, ATTRTYPE, OLD_DB.EMPLOYEES
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.Employees.first_name || OLD_DB.Employees.last_name
and ATTRTYPE.OBJECT_TYPE_ID = 3
and ATTRTYPE.CODE = 'SAL';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select distinct OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.Employees.job_id
from OBJECTS, ATTRTYPE, OLD_DB.EMPLOYEES
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.Employees.first_name || OLD_DB.Employees.last_name
and ATTRTYPE.OBJECT_TYPE_ID = 3
and ATTRTYPE.CODE = 'JOB';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, DATE_VALUE)
select distinct OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.Employees.hire_date
from OBJECTS, ATTRTYPE, OLD_DB.EMPLOYEES
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.Employees.first_name || OLD_DB.Employees.last_name
and ATTRTYPE.OBJECT_TYPE_ID = 3
and ATTRTYPE.CODE = 'HIREDATE';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.Employees.first_name || ' ' || OLD_DB.Employees.last_name
from OBJECTS, ATTRTYPE, OLD_DB.EMPLOYEES
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.Employees.first_name || OLD_DB.Employees.last_name
and ATTRTYPE.OBJECT_TYPE_ID = 4
and ATTRTYPE.CODE = 'NAME';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.Employees.salary
from OBJECTS, ATTRTYPE, OLD_DB.EMPLOYEES
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.Employees.first_name || OLD_DB.Employees.last_name
and ATTRTYPE.OBJECT_TYPE_ID = 4
and ATTRTYPE.CODE = 'SAL';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.Employees.job_id
from OBJECTS, ATTRTYPE, OLD_DB.EMPLOYEES
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.Employees.first_name || OLD_DB.Employees.last_name
and ATTRTYPE.OBJECT_TYPE_ID = 4
and ATTRTYPE.CODE = 'JOB';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, DATE_VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.Employees.hire_date
from OBJECTS, ATTRTYPE, OLD_DB.EMPLOYEES
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.Employees.first_name || OLD_DB.Employees.last_name
and ATTRTYPE.OBJECT_TYPE_ID = 4
and ATTRTYPE.CODE = 'HIREDATE';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.REGIONS.REGION_NAME
from OBJECTS, ATTRTYPE, OLD_DB.REGIONS
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.REGIONS.REGION_NAME
and ATTRTYPE.OBJECT_TYPE_ID = 5;

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.countries.country_name
from OBJECTS, ATTRTYPE, OLD_DB.COUNTRIES
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.countries.country_name
and ATTRTYPE.OBJECT_TYPE_ID = 6;

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.jobs.job_title
from OBJECTS, ATTRTYPE, OLD_DB.JOBS
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.jobs.job_title
and ATTRTYPE.OBJECT_TYPE_ID = 7
and ATTRTYPE.CODE = 'NAME';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.jobs.min_salary
from OBJECTS, ATTRTYPE, OLD_DB.JOBS
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.jobs.job_title
and ATTRTYPE.OBJECT_TYPE_ID = 7
and ATTRTYPE.CODE = 'MIN_SAL';

INSERT INTO ATTRIBUTES (OBJECT_ID, ATTR_ID, VALUE)
select OBJECTS.OBJECT_ID, ATTRTYPE.ATTR_ID, OLD_DB.jobs.max_salary
from OBJECTS, ATTRTYPE, OLD_DB.JOBS
where OBJECTS.OBJECT_TYPE_ID = ATTRTYPE.OBJECT_TYPE_ID
and OBJECTS.NAME=OLD_DB.jobs.job_title
and ATTRTYPE.OBJECT_TYPE_ID = 7
and ATTRTYPE.CODE = 'MAX_SAL';


drop view emp_dep;
create view emp_dep as
select E.FIRST_NAME||E.LAST_NAME as EMP_NAME, D.DEPARTMENT_NAME as Dept
from OLD_DB.EMPLOYEES E, OLD_DB.DEPARTMENTS D
where E.department_id = D.DEPARTMENT_ID;

INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE)
select 7, O1.OBJECT_ID, O2.OBJECT_ID
from emp_dep, OBJECTS O1, OBJECTS O2
where emp_dep.EMP_NAME=O1.NAME and emp_dep.Dept=O2.NAME and O1.OBJECT_TYPE_ID=3;

INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE)
select 13, O1.OBJECT_ID, O2.OBJECT_ID
from emp_dep, OBJECTS O1, OBJECTS O2
where emp_dep.EMP_NAME=O1.NAME and emp_dep.Dept=O2.NAME and O1.OBJECT_TYPE_ID=4;

drop view emp_man;
create view emp_man as
select E1.FIRST_NAME||E1.LAST_NAME as EMP_NAME, E2.FIRST_NAME||E2.LAST_NAME as MAN_NAME
from OLD_DB.EMPLOYEES E1, OLD_DB.EMPLOYEES E2
where E1.MANAGER_ID=E2.EMPLOYEE_ID;

INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE)
select 8, O1.OBJECT_ID, O2.OBJECT_ID
from emp_man, OBJECTS O1, OBJECTS O2
where emp_man.EMP_NAME=O1.NAME and emp_man.MAN_NAME=O2.NAME and O2.OBJECT_TYPE_ID=3;

INSERT INTO OBJREFERENCE (ATTR_ID,OBJECT_ID,REFERENCE)
select 14, O1.OBJECT_ID, O2.OBJECT_ID
from emp_man, OBJECTS O1, OBJECTS O2
where emp_man.EMP_NAME=O1.NAME and emp_man.MAN_NAME=O2.NAME and O2.OBJECT_TYPE_ID=4;

/* 
11. Выполнить запрос, который: 
- получает фамилию, должность, номер подразделения сотрудников 
- сотрудники работают в городе Toronto. 
*/
SELECT A_emp_name.VALUE name, A_emp_job.VALUE job, dept.OBJECT_ID dept_id
FROM OBJECTS emp, ATTRIBUTES A_emp_name, ATTRIBUTES A_emp_job, OBJECTS dept, OBJECTS loc, ATTRIBUTES A_loc_city, OBJREFERENCE obj_ref
WHERE emp.OBJECT_TYPE_ID = 3 
AND A_emp_name.OBJECT_ID = emp.OBJECT_ID
AND A_emp_name.ATTR_ID = 3 
AND A_emp_job.OBJECT_ID = emp.OBJECT_ID
AND A_emp_job.ATTR_ID = 5 
AND dept.OBJECT_TYPE_ID = 2 
AND obj_ref.ATTR_ID = 7 
AND obj_ref.OBJECT_ID = emp.OBJECT_ID
AND obj_ref.REFERENCE = dept.OBJECT_ID
AND loc.OBJECT_TYPE_ID = 1 
AND A_loc_city.OBJECT_ID = loc.OBJECT_ID
AND A_loc_city.VALUE = 'Toronto'
AND loc.OBJECT_ID = dept.PARENT_ID;


/* Запрос для реляционной базы
SELECT E.LAST_NAME, J.JOB_TITLE, D.DEPARTMENT_ID, L.CITY
FROM EMPLOYEES E, JOBS J, DEPARTMENTS D, LOCATIONS L
WHERE E.JOB_ID=J.JOB_ID
AND E.DEPARTMENT_ID=D.DEPARTMENT_ID
AND D.LOCATION_ID=L.LOCATION_ID
AND L.CITY = 'Toronto';
*/


/*
12. Выполнить запрос, который: 
-  получает номера и фамилии сотрудников; 
- у сотрудников менеджером является сотрудник по имени John Russell. 
*/


/* Запрос для реляционной базы
SELECT E1.employee_id, E1.last_name, E2.FIRST_NAME || ' ' || E2.LAST_NAME as Manager
FROM EMPLOYEES E1, EMPLOYEES E2
WHERE E1.manager_id = E2.employee_id
AND CONCAT(E2.FIRST_NAME, E2.LAST_NAME)  = 'JohnRussell';
*/


